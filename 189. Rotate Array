// I love yahoo 变种， reverse
public static void rotatedArray(int[] arr, int k) {
		if (arr == null || arr.length == 0) {
			return;
		}
		k = k % arr.length;
		reverse(arr, 0, arr.length-k-1);
		reverse(arr, arr.length-k, arr.length-1);
		reverse(arr, 0, arr.length-1);
}
private static void reverse(int[] arr, int i, int j) {
  int temp = 0;
  while (i < j) {
    temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
    i++;
    j--;
  }
}


// 用额外数组：
public class Solution {
    public void rotate(int[] nums, int k) {
        int[] a = new int[nums.length];
        for (int i = 0; i < nums.length; i++) {
            a[(i + k) % nums.length] = nums[i];
        }
        for (int i = 0; i < nums.length; i++) {
            nums[i] = a[i];
        }
    }
}


// my LTE:我用的list 
class Solution {
    public void rotate(int[] nums, int k) {
        if (nums == null || nums.length == 0) {
            return;
        }
        k = k % nums.length;
        List<Integer> list = new ArrayList<>();
        for (int i = 0; i < nums.length; i++) {
            list.add(nums[i]);
        }
        for (int i = 0; i < k; i++) {
            list.add(0, list.get(list.size()-1));
            list.remove(list.size()-1);
        }
        for (int i = 0; i < list.size(); i++) {
            nums[i] = list.get(i);
        }
    }
}
