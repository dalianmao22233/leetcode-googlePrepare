// my solution, 1-time AC!  
class Solution {
    public static String reverseWords(String s) {
		if (s == null || s.length() == 0) {
			return s;
		}
		String[] str = s.split(" ");
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < str.length; i++) {
			str[i] = reverse(str[i]);
			sb.append(str[i]);
			sb.append(" ");
		}
		return sb.deleteCharAt(sb.length()-1).toString();
	}
	public static String reverse(String s) {
		if (s == null || s.length() == 0) {
			return s;
		}
		int low = 0;
		int high = s.length()-1;
		char[] arr = s.toCharArray();
		char temp;
		while (low < high) {
			temp = arr[low];
			arr[low] = arr[high];
			arr[high] = temp;
			low++;
			high--;
		}
		return String.valueOf(arr);
	}
}
// other better idea: 89.04%, using StringBuilder.reverse() feature.
public class Solution {
    public String reverseWords(String s) {
        String words[] = s.split(" ");
        StringBuilder res=new StringBuilder();
        for (String word: words)
            res.append(new StringBuffer(word).reverse().toString() + " ");
        return res.toString().trim();
    }
}
