// DP:
public int minDistance(String word1, String word2) {
    if (word1.equals(word2)) {
        return 0;
    }
    if (word1.length() == 0 || word2.length() == 0) {
        return Math.abs(word1.length() - word2.length());
    }
    int[][] dp = new int[word1.length() + 1][word2.length() + 1];
    for (int i = 0; i <= word1.length(); i++) {
        dp[i][0] = i;
    }
    for (int i = 0; i <= word2.length(); i++) {
        dp[0][i] = i;
    }
    for (int i = 1; i <= word1.length(); i++) {
        for (int j = 1; j <= word2.length(); j++) {
            if (word1.charAt(i - 1) == word2.charAt(j - 1)) {  // eg: red, rxx, M[1][1]=M[0][0]
                dp[i][j] = dp[i - 1][j - 1];  
            } else {
                dp[i][j] = Math.min(dp[i-1][j-1], Math.min(dp[i-1][j], dp[i][j-1])) + 1;
            }
        }
    }
    return dp[word1.length()][word2.length()];
}

// dfs (recursive)  这种没写对，当”a“,"b"的时候substring(1)越界报错，我不会改。。
class Solution {
    public int minDistance(String word1, String word2) {
        if (word1.isEmpty() && word2.isEmpty()) {
            return 0;
        }
        if (word1.isEmpty()) {
            return word2.length();
        }
        if (word2.isEmpty()) {
            return word1.length();
        }
        if (word1.equals(word2)) {
            return 0;
        }
        int match = Integer.MAX_VALUE;
        // 1. match:
        if (word1.charAt(0) == word2.charAt(0)) {
            return 1+minDistance(word1.substring(1), word2.substring(1));
        }
        // 2. replace:
        int replace = 1+minDistance(word1.substring(1), word2.substring(1));
        // 3. delete: 
        int delete = 1+minDistance(word1.substring(1), word2);
        // 4. insert: 
        int insert = 1+minDistance(word1, word2.substring(1));
        return Math.min(replace, Math.max(delete, insert));
    }
}
