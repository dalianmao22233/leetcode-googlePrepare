/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 
 https://leetcode.com/problems/binary-tree-paths/discuss/68258/Accepted-Java-simple-solution-in-8-lines
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> res = new ArrayList<>();
        if (root == null) {
            return res;
        }
        helper(root, res, "");
        return res;
    }
    public void helper(TreeNode node, List<String> res, String path) {
        System.out.println(path);
        if (node.left == null && node.right == null) {
            res.add(path + node.val);
        }
        if (node.left != null) {
            helper(node.left, res, path + node.val + "->");
        }
        if (node.right != null) {
            helper(node.right, res, path + node.val + "->");
        }
        
    }
}
