from laioffer: 常规做法
class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        List<Integer> res = new ArrayList<>();
        if (arr == null || arr.length == 0) {
            return res;
        }
        // left: index of largest element <= target
	// right: left+1, 这两个是离target最近的
        int left = findIndex(arr, x);
        int right = left+1;
        
        // get K elements.
        for (int i = 0; i < k; i++) {
            // 1. right: out of bound
	    // 2. no out of bound, array[left] is closer to target than right.
	    // sorted array, 不需要abs
            if (right >= arr.length || left >= 0 && x-arr[left] <= arr[right]-x) {
                // add at the head, 这题要求sorted output.
                res.add(0, arr[left]);
                left--;
            } else {
                // add at the end
                res.add(arr[right]);
                right++;
            }    
        }
        return res;
    }
    private int findIndex(int[] arr, int target) {
        int low = 0, high = arr.length-1;
        while (low < high-1) {  // 提前一步停下来
            int mid = low + (high-low)/2;
            if (arr[mid] <= target) {
                low = mid;
            } else {
                high = mid;
            }
        }
        // for low == high-1,返回这个index
        if (Math.abs(target-arr[low]) <= Math.abs(target-arr[high])) {
            return low;
        } else {
            return high;
        }
    }
    
    // 高票回答：O(logn)
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        int lo = 0;
        int hi = arr.length - k;
        int mid;
        Integer[] ret = new Integer[k];
        while (lo < hi) {
            mid = lo + (hi - lo) / 2;
            if(x - arr[mid] > arr[mid+k] - x)   // 小 x 大： 小到x的距离> x到大的距离，肯定是大的更close，所以low=mid+1.
                lo = mid + 1;
            else
                hi = mid;
        }

        List<Integer> list = new ArrayList<>();
        for(int i = lo; i < lo+k; i++)   // 注意别越界。。
            list.add(arr[i]);
        return list;
    }
    
    // 用Collection.sort(), time: O(nlogn) 
    public List<Integer> findClosestElements(List<Integer> arr, int k, int x) { // -->int[] arr
     Collections.sort(arr, (a,b) -> a == b ? a - b : Math.abs(a-x) - Math.abs(b-x));
     arr = arr.subList(0, k);
     Collections.sort(arr);
     return arr;
    }
}
