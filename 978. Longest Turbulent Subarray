//其实就是一个波形。
//Input: [9,4,2,10,7,8,8,1,9]
//Output: 5
//Explanation: (A[1] > A[2] < A[3] > A[4] < A[5])
牛逼， 1个pass扫一遍：
class Solution {
    public int maxTurbulenceSize(int[] A) {
        int res = 0, cur = 0;
        
        for (int i = 0; i < A.length; i++) {
            if (i == 0 || A[i] == A[i-1]) {   // 只有一个元素，或者遇到相等的元素，则记做长度为1.因为不符合题目波形规律
                cur = 1;
            } else if (i == 1 || A[i] > A[i-1] && A[i-1] < A[i-2] || A[i] < A[i-1] && A[i-1] > A[i-2]) {
                cur++;   //  有2个元素时，就是长度为2（++） ；多于2个元素时（此时也符合i-2>=0），符合波形，就++。
            } else {   // i有多于2个元素的时候，且不满足波形，那么就只能截取2个元素的任意组合。 反正就是2啦
                cur = 2;
            }
            res = Math.max(cur, res);
        }
        return res;
    }
}
