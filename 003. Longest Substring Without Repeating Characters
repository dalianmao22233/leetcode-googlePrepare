// sliding window: Time: O(n) space: min(m, n)
class Solution {
    public int lengthOfLongestSubstring(String s) {
        int n = s.length();
        Set<Character> set = new HashSet<>();
        int res = 0, start = 0, end = 0;
        while (start < n && end < n) {
            // try to extend the range [i, j]
            if (!set.contains(s.charAt(end))){
                set.add(s.charAt(end));
                res = Math.max(res, end - start+1);
                end++;
            } else {
                set.remove(s.charAt(start));
                start++;
            }
        }
        return res;
    }
}
